
@tailwind base;
@tailwind components;
@tailwind utilities;

/* ========== Base Layer Reset ========== */
html, body {
  @apply bg-black text-white antialiased overflow-x-hidden;
  background-color: #050d0a; /* Deep obsidian with green/blue undertones */
  background-image: radial-gradient(circle at 25% 20%, rgba(0,255,162,0.04), transparent 60%), 
                  radial-gradient(circle at 80% 80%, rgba(0,255,162,0.03), transparent 70%);
  font-family: 'Lexend', 'Comfortaa', sans-serif;
  scroll-behavior: smooth;
}

/* ========== Custom Root Theme Tokens ========== */
:root {
  --jade: #00ffa2;
  --jade-soft: rgba(0, 255, 162, 0.2);
  --jade-glow: 0 0 12px rgba(0, 255, 162, 0.5);
  --glass-bg: rgba(15, 25, 20, 0.25); /* Base for cards, slightly greenish */
  --glass-border: rgba(0, 255, 162, 0.15);
  --text-soft: rgba(255, 255, 255, 0.85);
  --text-muted: rgba(200, 255, 220, 0.6); /* Muted text with a slight jade tint */
  --blur: blur(16px);
  --shadow-soft: 0 4px 20px rgba(0, 255, 162, 0.1);

  /* ShadCN Compatibility - Mapped to new theme */
  /* Backgrounds */
  --background: 160 43% 4%; /* HSL for #050d0a Deep obsidian */
  --foreground: 0 0% 100%; /* white */
  
  /* Cards & Popovers - Using --glass-bg as base */
  /* HSL for rgba(15, 25, 20, 0.25) is tricky as alpha is involved. 
     Let's pick an HSL that represents a dark, slightly green-tinted glass.
     Approx. HSL for rgb(15,25,20) is 150, 25%, 8% 
  */
  --card: 150 25% 8%; /* Dark greenish glass */
  --card-foreground: 150 25% 90%; /* Light text for cards */
  
  --popover: 150 25% 10%; /* Slightly lighter than card */
  --popover-foreground: 150 25% 90%;

  /* Primary Interactive Elements (Jade) */
  --primary: 159 100% 50%; /* --jade: #00ffa2 */
  --primary-foreground: 159 100% 10%; /* Dark green for text on jade */

  /* Secondary Elements (Subtle Jade/Glass) */
  --secondary: 159 60% 25%; /* A more desaturated/darker jade */
  --secondary-foreground: 159 60% 85%; /* Light text for secondary */

  /* Muted Text & Borders for components */
  /* --text-muted: rgba(200, 255, 220, 0.6) -> approx HSL 140, 100%, 89% (ignoring alpha)
     For backgrounds/borders, we need something darker.
  */
  --muted: 150 20% 15%; /* Dark muted green/gray for component backgrounds */
  --muted-foreground: 140 40% 70%; /* For text on muted backgrounds, maps to --text-muted */
  
  --accent: 159 80% 60%; /* A slightly lighter/brighter Jade for accents */
  --accent-foreground: 159 100% 10%; /* Dark green for text on accent */
  
  --destructive: 0 84% 60%; /* Standard red for destructive actions */
  --destructive-foreground: 0 0% 98%;

  /* Borders & Inputs */
  --border: 159 100% 50% / 0.25; /* --glass-border at 25% opacity for components */
  --input: 150 25% 10% / 0.8;   /* Darker, more opaque glass for inputs */
  --ring: 159 100% 50%;       /* Jade for focus rings */

  --radius: 1rem; 

  /* Chart Colors - Harmonized with Jade */
  --chart-1: hsl(var(--primary));
  --chart-2: 159 80% 60%; /* Lighter Jade */
  --chart-3: 159 60% 40%; /* Darker Jade */
  --chart-4: 159 70% 70%; /* Softer Jade */
  --chart-5: 140 20% 80%; /* Neutral for lines/text */

  /* Scrollbar Variables - Dark Theme to match */
  --scrollbar-track-bg: hsl(var(--background) / 0.6);
  --scrollbar-thumb-bg: hsl(var(--muted-foreground) / 0.3);
  --scrollbar-thumb-hover-bg: hsl(var(--muted-foreground) / 0.5);
  --scrollbar-thumb-border-color: hsl(var(--background) / 0.6);
}

/* Ensure Tailwind base styles use our custom properties for background and text */
@layer base {
  body {
    @apply bg-background text-foreground;
  }
  * {
    @apply border-border; /* Default border for components */
  }
}

/* ========== Global Utility Layer ========== */
.glass-panel {
  backdrop-filter: var(--blur);
  background: var(--glass-bg);
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow-soft);
  border-radius: 1.5rem;
}

.glow-jade {
  box-shadow: var(--jade-glow);
  border-color: var(--jade-soft);
}

.text-glass {
  color: var(--text-soft);
}

.text-muted { /* This utility class will now use the --text-muted token */
  color: var(--text-muted);
}

/* ========== Buttons & Interactions ========== */
.button-glassy {
  @apply px-4 py-2 rounded-xl text-white font-medium transition-all;
  background: rgba(0, 255, 162, 0.1);
  border: 1px solid var(--glass-border);
  backdrop-filter: blur(8px);
  box-shadow: var(--shadow-soft);
}

.button-glassy:hover {
  background: rgba(0, 255, 162, 0.2);
  box-shadow: 0 0 8px var(--jade-soft);
}

/* ========== Animations & Motion ========== */
@keyframes pulseJade {
  0%, 100% { box-shadow: 0 0 0 0 rgba(0, 255, 162, 0.4); }
  50% { box-shadow: 0 0 0 8px rgba(0, 255, 162, 0); }
}

.animate-pulse-jade {
  animation: pulseJade 2s infinite;
}

.fade-in-glass {
  animation: fadeGlassIn 0.6s ease-out forwards;
}

@keyframes fadeGlassIn {
  from {
    opacity: 0;
    transform: scale(0.95);
    backdrop-filter: blur(0px);
  }
  to {
    opacity: 1;
    transform: scale(1);
    backdrop-filter: var(--blur);
  }
}

/* React Grid Layout specific styles */
.react-grid-layout {
  position: relative;
  transition: height 200ms ease;
}
.react-grid-item {
  transition: all 200ms ease;
  transition-property: left, top, width, height;
}
.react-grid-item.cssTransforms {
  transition-property: transform;
}
.react-grid-item.resizing {
  z-index: 1;
  will-change: width, height;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
}

.react-grid-item.dropping {
  visibility: hidden;
}

.react-grid-item.react-grid-placeholder {
  background: hsl(var(--primary) / 0.2); 
  opacity: 0.5;
  transition-duration: 100ms;
  z-index: 2;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
  border-radius: var(--radius);
  border: 1px dashed hsl(var(--primary) / 0.4); 
  backdrop-filter: blur(2px);
}

.react-grid-item > .react-resizable-handle {
  position: absolute;
  width: 20px;
  height: 20px;
}

.react-grid-item > .react-resizable-handle::after {
  content: "";
  position: absolute;
  right: 2px;
  bottom: 2px;
  width: 10px;
  height: 10px;
  border-right: 2px solid hsl(var(--foreground) / 0.5);
  border-bottom: 2px solid hsl(var(--foreground) / 0.5);
  border-radius: 1px;
  opacity: 0.7;
  transition: opacity 0.2s ease-in-out;
}

.react-grid-item:hover > .react-resizable-handle::after {
  opacity: 1;
}

.react-resizable-hide > .react-resizable-handle {
  display: none;
}

/* Custom Scrollbar Styles using new tokens */
@layer utilities {
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  ::-webkit-scrollbar-track {
    background: var(--scrollbar-track-bg); 
    border-radius: 10px;
  }
  ::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-thumb-bg); 
    border-radius: 10px;
    border: 2px solid var(--scrollbar-thumb-border-color); 
    background-clip: padding-box;
  }
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--scrollbar-thumb-hover-bg); 
    border-color: var(--scrollbar-thumb-border-color); 
  }
  ::-webkit-scrollbar-corner {
    background: transparent;
  }
  * {
    scrollbar-width: thin;
    scrollbar-color: var(--scrollbar-thumb-bg) var(--scrollbar-track-bg); 
  }
}

/* Zone Shimmer Border */
@layer utilities {
  .zone-shimmer-border {
    position: relative;
    overflow: hidden;
  }
  .zone-shimmer-border::before {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background-image: conic-gradient(
      transparent,
      transparent,
      transparent,
      hsl(var(--accent) / 0.3), 
      hsl(var(--primary) / 0.2),  
      transparent,
      transparent
    );
    animation: shimmer 4s linear infinite;
    z-index: -1; 
    border-radius: inherit; 
  }
  .zone-shimmer-border > * {
    position: relative; 
    z-index: 1;
  }
}

@keyframes shimmer {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

    