// src/ai/flows/explain-security-vulnerability.ts
'use server';

/**
 * @fileOverview Explains security vulnerabilities and suggests remediation steps.
 *
 * - explainSecurityVulnerability - A function that handles the explanation of security vulnerabilities and suggests remediation steps.
 * - ExplainSecurityVulnerabilityInput - The input type for the explainSecurityVulnerability function.
 * - ExplainSecurityVulnerabilityOutput - The return type for the explainSecurityVulnerability function.
 */

import { ai } from '@/ai/genkit';
import { z } from 'genkit';

const ExplainSecurityVulnerabilityInputSchema = z.object({
  vulnerabilityDescription: z
    .string()
    .describe('A detailed description of the security vulnerability.'),
});
export type ExplainSecurityVulnerabilityInput = z.infer<
  typeof ExplainSecurityVulnerabilityInputSchema
>;

const ExplainSecurityVulnerabilityOutputSchema = z.object({
  explanation: z
    .string()
    .describe('A comprehensive explanation of the security vulnerability.'),
  remediationSteps: z
    .string()
    .describe('Suggested remediation steps to address the vulnerability.'),
});
export type ExplainSecurityVulnerabilityOutput = z.infer<
  typeof ExplainSecurityVulnerabilityOutputSchema
>;

export async function explainSecurityVulnerability(
  input: ExplainSecurityVulnerabilityInput
): Promise<ExplainSecurityVulnerabilityOutput> {
  return explainSecurityVulnerabilityFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainSecurityVulnerabilityPrompt',
  input: { schema: ExplainSecurityVulnerabilityInputSchema },
  output: { schema: ExplainSecurityVulnerabilityOutputSchema },
  prompt: `You are an expert security analyst specializing in explaining security vulnerabilities and suggesting remediation steps.

You will use the provided description of the security vulnerability to provide a comprehensive explanation and suggest actionable remediation steps.

Vulnerability Description: {{{vulnerabilityDescription}}}`,
});

const explainSecurityVulnerabilityFlow = ai.defineFlow(
  {
    name: 'explainSecurityVulnerabilityFlow',
    inputSchema: ExplainSecurityVulnerabilityInputSchema,
    outputSchema: ExplainSecurityVulnerabilityOutputSchema,
  },
  async input => {
    const { output } = await prompt(input);
    return output!;
  }
);
